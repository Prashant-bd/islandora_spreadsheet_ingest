<?php

/**
 * @file
 * Module installation/uninstallation hooks and helpers.
 */

/**
 * Implements hook_schema().
 */
function islandora_spreadsheet_ingest_schema() {
  // @see https://www.drupal.org/project/drupal/issues/1148856
  $pgsql = Database::getConnection()->driver() == 'pgsql';
  $schema = array();
  // Storage for templates.
  $schema['islandora_spreadsheet_ingest_templates'] = array(
    'description' => 'templates used during ingest.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the template.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => 'The Drupal file identifier of the template.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'unique keys' => $pgsql ? array('name' => array('name')) : array('name' => array(array('name', 191))),
    'primary key' => array('id'),
    'foreign keys' => array(
      'fid' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    ),
  );
  // Ties templates to one or more DSIDs.
  $schema['islandora_spreadsheet_ingest_dsids'] = array(
    'description' => 'DSIDs associated with templates.',
    'fields' => array(
      'tid' => array(
        'description' => 'Template ID from the islandora_spreadsheet_ingest_templates table.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'dsid' => array(
        'description' => 'DSID associated with this template.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('tid', 'dsid'),
    'foreign keys' => array(
      'tid' => array(
        'table' => 'islandora_spreadsheet_ingest_templates',
        'columns' => array('tid' => 'id'),
      ),
    ),
  );
  return $schema;
}

/**
 * Implements hook_requirements().
 */
function islandora_spreadsheet_ingest_requirements() {
  $t = get_t();
  $command = variable_get('islandora_spreadsheet_ingest_saxon_command', '/usr/bin/saxonb-xslt');
  $saxon = is_executable($command);
  return array(
    'islandora_spreadsheet_ingest_saxon_available' => array(
      'title' => $t('Saxon XSLT Processor'),
      'value' => $saxon,
      'description' => $saxon ? '' : $t('Cannot execute saxonb-xslt from the command line.'),
      'severity' => $saxon ? REQUIREMENT_OK : REQUIREMENT_WARNING,
    ),
  );
}

/**
 * Implements hook_uninstall().
 */
function islandora_spreadsheet_ingest_uninstall() {
  $vars = array(
    'islandora_spreadsheet_ingest_default_cell_delimiter',
    'islandora_spreadsheet_ingest_default_binary_path',
    'islandora_spreadsheet_ingest_saxon_command',
  );
  array_walk($vars, 'variable_del');
}
