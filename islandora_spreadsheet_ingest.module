<?php

/**
 * @file
 * General hook implementations.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;

use Drupal\islandora_spreadsheet_ingest\RequestInterface;

/**
 * Helper; add file usage for a request.
 *
 * @param \Drupal\islandora_spreadsheet_ingest\RequestInterface $request
 *   The request of which to add the usage.
 */
function _islandora_spreadsheet_ingest_add_file_usage(RequestInterface $request) {
  $file_usage_service = \Drupal::service('file.usage');
  $file_service = \Drupal::service('entity_type.manager')->getStorage('file');
  $file_usage_service->add(
    $file_service->load(reset($request->getSheet()['file'])),
    'islandora_spreadsheet_ingest',
    $request->getEntityTypeId(),
    $request->id()
  );
}

/**
 * Helper; delete file usage for a request.
 *
 * @param \Drupal\islandora_spreadsheet_ingest\RequestInterface $request
 *   The request of which to delete the usage.
 */
function _islandora_spreadsheet_ingest_delete_file_usage(RequestInterface $request) {
  $file_usage_service = \Drupal::service('file.usage');
  $file_service = \Drupal::service('entity_type.manager')->getStorage('file');
  $file_usage_service->delete(
    $file_service->load(reset($request->getSheet()['file'])),
    'islandora_spreadsheet_ingest',
    $request->getEntityTypeId(),
    $request->id()
  );
}

/**
 * Implements hook_ENTITY_TYPE_create().
 */
function islandora_spreadsheet_ingest_isi_request_create(RequestInterface $request) {
  _islandora_spreadsheet_ingest_add_file_usage($request);

  // If active, generate the migration group...
  // XXX: Should only actually fire when importing the config... which would
  // probably be broken due to referencing content (a file)... may have to
  // suppress/detect related errors?
  if ($request->getActive()) {
    \Drupal::service('islandora_spreadsheet_ingest.migration_group_deriver')->create($request);
    \Drupal::service('islandora_spreadsheet_ingest.migration_deriver')->createAll($request);
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function islandora_spreadsheet_ingest_isi_request_update(RequestInterface $request) {
  _islandora_spreadsheet_ingest_delete_file_usage($request->original);
  _islandora_spreadsheet_ingest_add_file_usage($request);

  if ($request->getActive()) {
    // (Re)derive our migration group.
    \Drupal::service('islandora_spreadsheet_ingest.migration_group_deriver')->create($request);
    \Drupal::service('islandora_spreadsheet_ingest.migration_deriver')->createAll($request);
  }
  else {
    // Nuke the related migration group.
    \Drupal::service('islandora_spreadsheet_ingest.migration_deriver')->deleteAll($request);
    \Drupal::service('islandora_spreadsheet_ingest.migration_group_deriver')->delete($request);
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function islandora_spreadsheet_ingest_isi_request_delete(RequestInterface $request) {
  _islandora_spreadsheet_ingest_delete_file_usage($request);

  \Drupal::service('islandora_spreadsheet_ingest.migration_deriver')->deleteAll($request);
  \Drupal::service('islandora_spreadsheet_ingest.migration_group_deriver')->delete($request);
}

/**
 * Implements hook_entity_operation().
 */
function islandora_spreadsheet_ingest_entity_operation(EntityInterface $entity) {
  $ops = [];

  if ($entity->getEntityType()->id() == 'isi_request') {
    $ops['map'] = [
      'title' => t('Map'),
      'url' => $entity->toUrl('map-form'),
      'weight' => 12,
    ];
    $ops['activate'] = [
      'title' => t('Activation'),
      'url' => $entity->toUrl('activate-form'),
      'weight' => 14,
    ];

    if ($entity->getActive()) {
      $ops['migration'] = [
        'title' => t('Migration group'),
        'url' => Url::fromRoute('entity.migration.list', [
          'migration_group' => \Drupal::service('islandora_spreadsheet_ingest.migration_group_deriver')->deriveName($entity),
        ]),
        'weight' => 16,
      ];
    }
  }

  return $ops;
}
